// Generated by view binder compiler. Do not edit!
package com.example.flashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flashcards.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText answerInput;

  @NonNull
  public final TextInputEditText clozeAnswerInput;

  @NonNull
  public final LinearLayout clozeLayout;

  @NonNull
  public final TextView counterText;

  @NonNull
  public final EmptyFlashcardsStateBinding emptyView;

  @NonNull
  public final ConstraintLayout exerciseContainer;

  @NonNull
  public final LinearLayout frontBackLayout;

  @NonNull
  public final LinearLayout multipleChoiceLayout;

  @NonNull
  public final RadioGroup optionsRadioGroup;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView questionText;

  @NonNull
  public final MaterialButton submitButton;

  @NonNull
  public final TextInputEditText textInputAnswer;

  @NonNull
  public final LinearLayout textInputLayout;

  private ActivityExerciseBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText answerInput, @NonNull TextInputEditText clozeAnswerInput,
      @NonNull LinearLayout clozeLayout, @NonNull TextView counterText,
      @NonNull EmptyFlashcardsStateBinding emptyView, @NonNull ConstraintLayout exerciseContainer,
      @NonNull LinearLayout frontBackLayout, @NonNull LinearLayout multipleChoiceLayout,
      @NonNull RadioGroup optionsRadioGroup, @NonNull ProgressBar progressBar,
      @NonNull TextView questionText, @NonNull MaterialButton submitButton,
      @NonNull TextInputEditText textInputAnswer, @NonNull LinearLayout textInputLayout) {
    this.rootView = rootView;
    this.answerInput = answerInput;
    this.clozeAnswerInput = clozeAnswerInput;
    this.clozeLayout = clozeLayout;
    this.counterText = counterText;
    this.emptyView = emptyView;
    this.exerciseContainer = exerciseContainer;
    this.frontBackLayout = frontBackLayout;
    this.multipleChoiceLayout = multipleChoiceLayout;
    this.optionsRadioGroup = optionsRadioGroup;
    this.progressBar = progressBar;
    this.questionText = questionText;
    this.submitButton = submitButton;
    this.textInputAnswer = textInputAnswer;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerInput;
      TextInputEditText answerInput = ViewBindings.findChildViewById(rootView, id);
      if (answerInput == null) {
        break missingId;
      }

      id = R.id.clozeAnswerInput;
      TextInputEditText clozeAnswerInput = ViewBindings.findChildViewById(rootView, id);
      if (clozeAnswerInput == null) {
        break missingId;
      }

      id = R.id.clozeLayout;
      LinearLayout clozeLayout = ViewBindings.findChildViewById(rootView, id);
      if (clozeLayout == null) {
        break missingId;
      }

      id = R.id.counterText;
      TextView counterText = ViewBindings.findChildViewById(rootView, id);
      if (counterText == null) {
        break missingId;
      }

      id = R.id.emptyView;
      View emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }
      EmptyFlashcardsStateBinding binding_emptyView = EmptyFlashcardsStateBinding.bind(emptyView);

      id = R.id.exerciseContainer;
      ConstraintLayout exerciseContainer = ViewBindings.findChildViewById(rootView, id);
      if (exerciseContainer == null) {
        break missingId;
      }

      id = R.id.frontBackLayout;
      LinearLayout frontBackLayout = ViewBindings.findChildViewById(rootView, id);
      if (frontBackLayout == null) {
        break missingId;
      }

      id = R.id.multipleChoiceLayout;
      LinearLayout multipleChoiceLayout = ViewBindings.findChildViewById(rootView, id);
      if (multipleChoiceLayout == null) {
        break missingId;
      }

      id = R.id.optionsRadioGroup;
      RadioGroup optionsRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (optionsRadioGroup == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.questionText;
      TextView questionText = ViewBindings.findChildViewById(rootView, id);
      if (questionText == null) {
        break missingId;
      }

      id = R.id.submitButton;
      MaterialButton submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.textInputAnswer;
      TextInputEditText textInputAnswer = ViewBindings.findChildViewById(rootView, id);
      if (textInputAnswer == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      LinearLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new ActivityExerciseBinding((ConstraintLayout) rootView, answerInput, clozeAnswerInput,
          clozeLayout, counterText, binding_emptyView, exerciseContainer, frontBackLayout,
          multipleChoiceLayout, optionsRadioGroup, progressBar, questionText, submitButton,
          textInputAnswer, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

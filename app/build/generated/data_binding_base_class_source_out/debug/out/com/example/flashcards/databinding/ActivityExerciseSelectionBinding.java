// Generated by view binder compiler. Do not edit!
package com.example.flashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flashcards.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseSelectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton allDecksButton;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final EmptyFlashcardsStateBinding emptyView;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final TextView selectDeckText;

  private ActivityExerciseSelectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton allDecksButton, @NonNull BottomNavigationView bottomNavigation,
      @NonNull EmptyFlashcardsStateBinding emptyView, @NonNull RecyclerView recyclerview,
      @NonNull TextView selectDeckText) {
    this.rootView = rootView;
    this.allDecksButton = allDecksButton;
    this.bottomNavigation = bottomNavigation;
    this.emptyView = emptyView;
    this.recyclerview = recyclerview;
    this.selectDeckText = selectDeckText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allDecksButton;
      MaterialButton allDecksButton = ViewBindings.findChildViewById(rootView, id);
      if (allDecksButton == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.emptyView;
      View emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }
      EmptyFlashcardsStateBinding binding_emptyView = EmptyFlashcardsStateBinding.bind(emptyView);

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.selectDeckText;
      TextView selectDeckText = ViewBindings.findChildViewById(rootView, id);
      if (selectDeckText == null) {
        break missingId;
      }

      return new ActivityExerciseSelectionBinding((ConstraintLayout) rootView, allDecksButton,
          bottomNavigation, binding_emptyView, recyclerview, selectDeckText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

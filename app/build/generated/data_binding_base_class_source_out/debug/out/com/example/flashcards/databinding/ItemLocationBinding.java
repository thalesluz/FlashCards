// Generated by view binder compiler. Do not edit!
package com.example.flashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flashcards.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLocationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final TextView locationCoordinates;

  @NonNull
  public final ImageView locationIcon;

  @NonNull
  public final TextView locationName;

  private ItemLocationBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton deleteButton,
      @NonNull TextView locationCoordinates, @NonNull ImageView locationIcon,
      @NonNull TextView locationName) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.locationCoordinates = locationCoordinates;
    this.locationIcon = locationIcon;
    this.locationName = locationName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.locationCoordinates;
      TextView locationCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (locationCoordinates == null) {
        break missingId;
      }

      id = R.id.locationIcon;
      ImageView locationIcon = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon == null) {
        break missingId;
      }

      id = R.id.locationName;
      TextView locationName = ViewBindings.findChildViewById(rootView, id);
      if (locationName == null) {
        break missingId;
      }

      return new ItemLocationBinding((MaterialCardView) rootView, deleteButton, locationCoordinates,
          locationIcon, locationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

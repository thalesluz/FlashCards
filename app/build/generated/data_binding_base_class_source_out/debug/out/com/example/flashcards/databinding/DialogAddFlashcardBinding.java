// Generated by view binder compiler. Do not edit!
package com.example.flashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flashcards.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddFlashcardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText backEditText;

  @NonNull
  public final TextInputEditText clozeAnswerEditText;

  @NonNull
  public final LinearLayout clozeLayout;

  @NonNull
  public final TextInputEditText clozeTextEditText;

  @NonNull
  public final AutoCompleteTextView correctOptionSpinner;

  @NonNull
  public final AutoCompleteTextView flashcardTypeSpinner;

  @NonNull
  public final LinearLayout frontBackLayout;

  @NonNull
  public final TextInputEditText frontEditText;

  @NonNull
  public final LinearLayout multipleChoiceLayout;

  @NonNull
  public final TextInputEditText multipleChoiceQuestionEditText;

  @NonNull
  public final TextInputEditText option1EditText;

  @NonNull
  public final TextInputEditText option2EditText;

  @NonNull
  public final TextInputEditText option3EditText;

  @NonNull
  public final TextInputEditText option4EditText;

  @NonNull
  public final TextInputEditText textInputAnswerEditText;

  @NonNull
  public final LinearLayout textInputLayout;

  @NonNull
  public final TextInputEditText textInputQuestionEditText;

  private DialogAddFlashcardBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText backEditText, @NonNull TextInputEditText clozeAnswerEditText,
      @NonNull LinearLayout clozeLayout, @NonNull TextInputEditText clozeTextEditText,
      @NonNull AutoCompleteTextView correctOptionSpinner,
      @NonNull AutoCompleteTextView flashcardTypeSpinner, @NonNull LinearLayout frontBackLayout,
      @NonNull TextInputEditText frontEditText, @NonNull LinearLayout multipleChoiceLayout,
      @NonNull TextInputEditText multipleChoiceQuestionEditText,
      @NonNull TextInputEditText option1EditText, @NonNull TextInputEditText option2EditText,
      @NonNull TextInputEditText option3EditText, @NonNull TextInputEditText option4EditText,
      @NonNull TextInputEditText textInputAnswerEditText, @NonNull LinearLayout textInputLayout,
      @NonNull TextInputEditText textInputQuestionEditText) {
    this.rootView = rootView;
    this.backEditText = backEditText;
    this.clozeAnswerEditText = clozeAnswerEditText;
    this.clozeLayout = clozeLayout;
    this.clozeTextEditText = clozeTextEditText;
    this.correctOptionSpinner = correctOptionSpinner;
    this.flashcardTypeSpinner = flashcardTypeSpinner;
    this.frontBackLayout = frontBackLayout;
    this.frontEditText = frontEditText;
    this.multipleChoiceLayout = multipleChoiceLayout;
    this.multipleChoiceQuestionEditText = multipleChoiceQuestionEditText;
    this.option1EditText = option1EditText;
    this.option2EditText = option2EditText;
    this.option3EditText = option3EditText;
    this.option4EditText = option4EditText;
    this.textInputAnswerEditText = textInputAnswerEditText;
    this.textInputLayout = textInputLayout;
    this.textInputQuestionEditText = textInputQuestionEditText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddFlashcardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddFlashcardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_flashcard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddFlashcardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backEditText;
      TextInputEditText backEditText = ViewBindings.findChildViewById(rootView, id);
      if (backEditText == null) {
        break missingId;
      }

      id = R.id.clozeAnswerEditText;
      TextInputEditText clozeAnswerEditText = ViewBindings.findChildViewById(rootView, id);
      if (clozeAnswerEditText == null) {
        break missingId;
      }

      id = R.id.clozeLayout;
      LinearLayout clozeLayout = ViewBindings.findChildViewById(rootView, id);
      if (clozeLayout == null) {
        break missingId;
      }

      id = R.id.clozeTextEditText;
      TextInputEditText clozeTextEditText = ViewBindings.findChildViewById(rootView, id);
      if (clozeTextEditText == null) {
        break missingId;
      }

      id = R.id.correctOptionSpinner;
      AutoCompleteTextView correctOptionSpinner = ViewBindings.findChildViewById(rootView, id);
      if (correctOptionSpinner == null) {
        break missingId;
      }

      id = R.id.flashcardTypeSpinner;
      AutoCompleteTextView flashcardTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (flashcardTypeSpinner == null) {
        break missingId;
      }

      id = R.id.frontBackLayout;
      LinearLayout frontBackLayout = ViewBindings.findChildViewById(rootView, id);
      if (frontBackLayout == null) {
        break missingId;
      }

      id = R.id.frontEditText;
      TextInputEditText frontEditText = ViewBindings.findChildViewById(rootView, id);
      if (frontEditText == null) {
        break missingId;
      }

      id = R.id.multipleChoiceLayout;
      LinearLayout multipleChoiceLayout = ViewBindings.findChildViewById(rootView, id);
      if (multipleChoiceLayout == null) {
        break missingId;
      }

      id = R.id.multipleChoiceQuestionEditText;
      TextInputEditText multipleChoiceQuestionEditText = ViewBindings.findChildViewById(rootView, id);
      if (multipleChoiceQuestionEditText == null) {
        break missingId;
      }

      id = R.id.option1EditText;
      TextInputEditText option1EditText = ViewBindings.findChildViewById(rootView, id);
      if (option1EditText == null) {
        break missingId;
      }

      id = R.id.option2EditText;
      TextInputEditText option2EditText = ViewBindings.findChildViewById(rootView, id);
      if (option2EditText == null) {
        break missingId;
      }

      id = R.id.option3EditText;
      TextInputEditText option3EditText = ViewBindings.findChildViewById(rootView, id);
      if (option3EditText == null) {
        break missingId;
      }

      id = R.id.option4EditText;
      TextInputEditText option4EditText = ViewBindings.findChildViewById(rootView, id);
      if (option4EditText == null) {
        break missingId;
      }

      id = R.id.textInputAnswerEditText;
      TextInputEditText textInputAnswerEditText = ViewBindings.findChildViewById(rootView, id);
      if (textInputAnswerEditText == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      LinearLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputQuestionEditText;
      TextInputEditText textInputQuestionEditText = ViewBindings.findChildViewById(rootView, id);
      if (textInputQuestionEditText == null) {
        break missingId;
      }

      return new DialogAddFlashcardBinding((ScrollView) rootView, backEditText, clozeAnswerEditText,
          clozeLayout, clozeTextEditText, correctOptionSpinner, flashcardTypeSpinner,
          frontBackLayout, frontEditText, multipleChoiceLayout, multipleChoiceQuestionEditText,
          option1EditText, option2EditText, option3EditText, option4EditText,
          textInputAnswerEditText, textInputLayout, textInputQuestionEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

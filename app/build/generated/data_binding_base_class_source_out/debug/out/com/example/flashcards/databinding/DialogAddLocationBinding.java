// Generated by view binder compiler. Do not edit!
package com.example.flashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flashcards.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddLocationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText etLocationName;

  @NonNull
  public final RadioButton rbIconHome;

  @NonNull
  public final RadioButton rbIconLocation;

  @NonNull
  public final RadioButton rbIconPark;

  @NonNull
  public final RadioButton rbIconRestaurant;

  @NonNull
  public final RadioButton rbIconSchool;

  @NonNull
  public final RadioButton rbIconWork;

  @NonNull
  public final RadioGroup rgIconSelection;

  @NonNull
  public final TextInputLayout tilLocationName;

  @NonNull
  public final TextView tvSelectIcon;

  private DialogAddLocationBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText etLocationName, @NonNull RadioButton rbIconHome,
      @NonNull RadioButton rbIconLocation, @NonNull RadioButton rbIconPark,
      @NonNull RadioButton rbIconRestaurant, @NonNull RadioButton rbIconSchool,
      @NonNull RadioButton rbIconWork, @NonNull RadioGroup rgIconSelection,
      @NonNull TextInputLayout tilLocationName, @NonNull TextView tvSelectIcon) {
    this.rootView = rootView;
    this.etLocationName = etLocationName;
    this.rbIconHome = rbIconHome;
    this.rbIconLocation = rbIconLocation;
    this.rbIconPark = rbIconPark;
    this.rbIconRestaurant = rbIconRestaurant;
    this.rbIconSchool = rbIconSchool;
    this.rbIconWork = rbIconWork;
    this.rgIconSelection = rgIconSelection;
    this.tilLocationName = tilLocationName;
    this.tvSelectIcon = tvSelectIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etLocationName;
      TextInputEditText etLocationName = ViewBindings.findChildViewById(rootView, id);
      if (etLocationName == null) {
        break missingId;
      }

      id = R.id.rbIconHome;
      RadioButton rbIconHome = ViewBindings.findChildViewById(rootView, id);
      if (rbIconHome == null) {
        break missingId;
      }

      id = R.id.rbIconLocation;
      RadioButton rbIconLocation = ViewBindings.findChildViewById(rootView, id);
      if (rbIconLocation == null) {
        break missingId;
      }

      id = R.id.rbIconPark;
      RadioButton rbIconPark = ViewBindings.findChildViewById(rootView, id);
      if (rbIconPark == null) {
        break missingId;
      }

      id = R.id.rbIconRestaurant;
      RadioButton rbIconRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (rbIconRestaurant == null) {
        break missingId;
      }

      id = R.id.rbIconSchool;
      RadioButton rbIconSchool = ViewBindings.findChildViewById(rootView, id);
      if (rbIconSchool == null) {
        break missingId;
      }

      id = R.id.rbIconWork;
      RadioButton rbIconWork = ViewBindings.findChildViewById(rootView, id);
      if (rbIconWork == null) {
        break missingId;
      }

      id = R.id.rgIconSelection;
      RadioGroup rgIconSelection = ViewBindings.findChildViewById(rootView, id);
      if (rgIconSelection == null) {
        break missingId;
      }

      id = R.id.tilLocationName;
      TextInputLayout tilLocationName = ViewBindings.findChildViewById(rootView, id);
      if (tilLocationName == null) {
        break missingId;
      }

      id = R.id.tvSelectIcon;
      TextView tvSelectIcon = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectIcon == null) {
        break missingId;
      }

      return new DialogAddLocationBinding((LinearLayout) rootView, etLocationName, rbIconHome,
          rbIconLocation, rbIconPark, rbIconRestaurant, rbIconSchool, rbIconWork, rgIconSelection,
          tilLocationName, tvSelectIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
